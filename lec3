Надо узнать про стандарт ISO sql.
Indexes
Многие диалекты поддерживают эту возможность. Это позволяет на много порядков ускорять поиск данных.
С другой стороны, когда мы выполняем пополнение базы данных, мы каждый раз натыкаемся на то, что у нас должен изменяться индекс.
Есть смысл удалить индекс перед загрузкой большого количества данных, потом загрузить их и восстановить индекс.
При создании индексов столбцы должны быть упорядочены. Можно создать для каждого индекса порядок столбца.

Представление позволяет решать сразу много вопросов. Она представляет из себя только описание.
В зависимости от того, каким образом написан запрос, на который оппирается представление, оно может быть обновляемое и не обновляемое. В некотрых субд есть разные реалиавции.
Существуют некоторые ключевые слова, которые говорят, как будут преображаться строки, связанные с представлением в результате запроса.
Для того, чтобы иметь возможность строить представление, мы должны иметь привелегии, чтобы выполнять операции над объектами: select и usage над столбцами в запросе.
Можно представление разделить на горизонтальное и вертикальное.
Перечисляя столбцы, мы можем сформировать вертикальное представление.

Удалить -- DROP VIEW.
Процедура получения данных по представлению представляет трудность.
Есть 2 подхода к работе с такими виртуальными таблицами и данными.
1) мы выполняем скрещивание запросов.
    Из select отображается на названия столбцов.
    Далее столбец отображается.
    Далее from имена заменяются на список из подзапроса, на котором базируется представление.
    Получаем, постоянно переписсывая, фразу from.
    where замещается на запрос представления.
    group by представляется из подзапроса представления.
    order by представляется и уже у нас сортировка, которая обеспечивает трансляцию столбца представления столбец запроса.
    И мы получаем конструкцию запроса, как если бы у нас этого представления не было.
    Стандарт накладывает ограничения на создание и использование представлений.
    Если представление операется на группирующую функцию, можно использовать только на group by и т.д.
    Обновляемые представления.
    distinct не используется.

2) материализованное представление, когда данные добываются из базы и хранятся во временных представлениях. Если есть действия, на которые операется представление, то в этот момент мы можем обновлять таблицы.
    
Транзакции

Это когда мы все понимаем, что это связано с операциями, когда что-то происходит, которое требует вполне определённого завершения.
Должны быть подтверждения операций.
Когда мы должны убедиться, что и та и другая сторона имеет данные для операции и которые могут быть уже выполнены.
В sql есть commit и rollback.
Операция должна быть атомарная, когда это последовательность действий. К примеру, когда у нас много серверов и на всех мы можем потерять данные из-за ошибки на одном.
commit заершает транзакцию и записывает все изменения. После него уже нельзя ничего откатить.`
rollback позволяет откатить изменения на начало транзакции.
SET transaction 
Транзакция может быть изолирована. Есть разные уровни изоляции.
Пx2
Создан побеждатьрограмма может читать данные. Если происходит простой select данных, то транзакция может нарушить целостность данных.
Это происходит из-за плохой организации изоляции данных.
В зависимости от глубины изоляции изменяется производительность.
Есть 4 уровня изоляции. Чем глубже уровень, тем он больше требует накладных расходов для его поддержки.

Варианты контроля доступа 2:
1) дискретный
2) обязательный
Стандартом iso поддерживается 6 привелегий для пользователей.
select update, delete, reference, usage, insert.

Это следующий прикладной уровень обеспечения контроля доступа к данным.
Данные трудно поддаются к оперативным восстановлениям.

GRANT предоставляет привелегии. Они могут быть предоставлены всем и одному юзеру.

SQL, как:
Язык программирования,
Курсоры,
Хранимые процедуры,
Триггеры,
Рекурсивные запросы.


