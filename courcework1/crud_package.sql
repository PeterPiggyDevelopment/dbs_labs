CREATE OR REPLACE PACKAGE  BODY CRUD_OPS AS
  PROCEDURE ADD_ORDER(
    CUSTOMER_FIRST_NAME  CUSTOMERS.FIRSTNAME%TYPE,
    CUSTOMER_LAST_NAME CUSTOMERS.LASTNAME%TYPE,
    CUSTOMER_MIDDLE_NAME CUSTOMERS.MIDDLENAME%TYPE,
    CUSTOMER_REGISTER_ADDERESS CUSTOMERS.REGISTER_ADDRESS%TYPE,
    CUSTOMER_CIT_COUNTRY_ID CUSTOMERS.CITIZENSHIP_COUNTRY_ID%TYPE,
    PRODUCT_ID PRODUCTION.ID%TYPE
  ) IS
    CUST_ID CUSTOMERS.id%TYPE;
    ORDER_ID ORDERS.ID%TYPE;
    BEGIN
      INSERT INTO CUSTOMERS (FIRSTNAME, LASTNAME, MIDDLENAME, REGISTER_ADDRESS, CITIZENSHIP_COUNTRY_ID)
        VALUES (CUSTOMER_FIRST_NAME, CUSTOMER_LAST_NAME, CUSTOMER_MIDDLE_NAME, CUSTOMER_REGISTER_ADDERESS, CUSTOMER_CIT_COUNTRY_ID)
        RETURNING ID INTO cust_id;
      INSERT INTO ORDERS (PRODUCT_ID, CUSTOMER_ID) VALUES (PRODUCT_ID, CUST_ID)
          RETURNING ID INTO ORDER_ID;
        --RETURN ORDER_ID;
    END;

  FUNCTION COUNT_ORDERS_OF_CUSTOMER(CUST_ID INT) RETURN int IS
    RES int;
    BEGIN
      SELECT count(*) INTO RES FROM ORDERS WHERE CUSTOMER_ID=CUST_ID;
      RETURN res;
    END;

  PROCEDURE UPDATE_CUSTOMER_INFO(
    CUSTOMER_ID CUSTOMERS.ID%TYPE,
    CUSTOMER_FIRSTNAME CUSTOMERS.FIRSTNAME%TYPE,
    CUSTOMER_LASTNAME CUSTOMERS.LASTNAME%TYPE,
    CUSTOMER_MIDDLENAME CUSTOMERS.MIDDLENAME%TYPE,
    CUSTOMER_REGISTER_ADDERESS CUSTOMERS.REGISTER_ADDRESS%TYPE,
    CUSTOMER_CIT_COUNTRY_ID CUSTOMERS.CITIZENSHIP_COUNTRY_ID%TYPE
  ) IS
      BEGIN
        UPDATE CUSTOMERS SET FIRSTNAME=CUSTOMER_FIRSTNAME, LASTNAME=CUSTOMER_LASTNAME,
          MIDDLENAME=CUSTOMER_MIDDLENAME,
          REGISTER_ADDRESS=CUSTOMER_REGISTER_ADDERESS,
          CITIZENSHIP_COUNTRY_ID=CUSTOMER_CIT_COUNTRY_ID
          WHERE ID=CUSTOMER_ID;
      END;
  PROCEDURE DELETE_ORDER(ORDER_ID INT) IS
    BEGIN
      DELETE FROM ORDERS WHERE ID=ORDER_ID;
    END;
END CRUD_OPS;

select * from ORDERS;
select * from CUSTOMERS;

BEGIN
  CRUD_OPS.ADD_ORDER('Name', 'Brown', 'Black', 'address', 1, 1);
END;

BEGIN
  CRUD_OPS.UPDATE_CUSTOMER_INFO(1, 'Petya', 'Brown', 'Black', 'address', 3);
END;
BEGIN
  CRUD_OPS.DELETE_ORDER(1);
END;

declare
  var int;
BEGIN
  select CRUD_OPS.COUNT_ORDERS_OF_CUSTOMER(1) from dual;
END;






create or replace TYPE customer_row_type IS OBJECT
(
  id int,
  firstname varchar(255),
  lastname varchar(255),
  middlename varchar(255),
  register_address varchar(255),
  citizenship_country_id int
);

--create or replace type customer_table_type is table of customer_row_type;

CREATE OR REPLACE PACKAGE CRUD_OPS AS
  TYPE customer_row_type IS RECORD
  (
    id int,
    firstname varchar(255),
    lastname varchar(255),
    middlename varchar(255),
    register_address varchar(255),
    citizenship_country_id int
  );
  type customer_table_type is table of customer_row_type;
  PROCEDURE ADD_ORDER(
    CUSTOMER_FIRST_NAME CUSTOMERS.FIRSTNAME%TYPE,
    CUSTOMER_LAST_NAME CUSTOMERS.LASTNAME%TYPE,
    CUSTOMER_MIDDLE_NAME CUSTOMERS.MIDDLENAME%TYPE,
    CUSTOMER_REGISTER_ADDERESS CUSTOMERS.REGISTER_ADDRESS%TYPE,
    CUSTOMER_CIT_COUNTRY_ID CUSTOMERS.CITIZENSHIP_COUNTRY_ID%TYPE,
    PRODUCT_ID PRODUCTION.ID%TYPE
  );-- RETURN INT;
  FUNCTION count_ORDERS_OF_CUSTOMER(CUST_ID INT) RETURN int;
  PROCEDURE UPDATE_CUSTOMER_INFO(
    CUSTOMER_ID CUSTOMERS.ID%TYPE,
    CUSTOMER_FIRSTNAME CUSTOMERS.FIRSTNAME%TYPE,
    CUSTOMER_LASTNAME CUSTOMERS.LASTNAME%TYPE,
    CUSTOMER_MIDDLENAME CUSTOMERS.MIDDLENAME%TYPE,
    CUSTOMER_REGISTER_ADDERESS CUSTOMERS.REGISTER_ADDRESS%TYPE,
    CUSTOMER_CIT_COUNTRY_ID CUSTOMERS.CITIZENSHIP_COUNTRY_ID%TYPE
  );
  PROCEDURE DELETE_ORDER(ORDER_ID INT);
    CONSTRAINT_VIOLATED EXCEPTION;
PRAGMA EXCEPTION_INIT(CONSTRAINT_VIOLATED, -2290);
END CRUD_OPS;

